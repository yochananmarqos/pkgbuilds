# https://aur.archlinux.org/packages/python-cx-freeze

pkgname=python-cx-freeze
_name=cx_Freeze
pkgver=8.3.0
pkgrel=2
pkgdesc="Create standalone executables from Python scripts"
arch=('x86_64' 'aarch64')
url="https://marcelotduarte.github.io/cx_Freeze"
license=('PSF-2.0')
depends=(
  'glibc'
  'patchelf'
  'python'
  'python-packaging'
  'python-setuptools'
  'python-filelock'
)
makedepends=(
  'python-build'
  'python-installer'
  'python-wheel'
)
checkdepends=(
  'python-pytest'
  'python-pytest-datafiles'
  'python-pytest-mock'
  'python-pytest-timeout'
  'python-pytest-xdist'
)
optdepends=(
  'perl-alien-build: Alien support for rpm, dpkg, stampede slp, and slackware tgz file formats'
  'pyside2: PySide 2 support'
  'pyside6: PySide 6 support'
  'python-pyqt5: PyQt5 support'
  'python-pyqt6: PyQt6 support'
  'rpm-tools: RPM Package Manager RPM.org support'
)
provides=('python-cx_freeze')
conflicts=('python-cx_freeze')
source=("$_name-$pkgver.tar.gz::https://github.com/marcelotduarte/cx_Freeze/archive/refs/tags/$pkgver.tar.gz")
sha512sums=('920f1bf582c73ef687956d0e58293e11e67a5c002816416ac4edf1e033d11131463625f90498f91bf41201a24fcae53c31604fc6b4aaf70eb2c16449f9896d36')

prepare() {
  cd "$_name-$pkgver"

  # Relax Setuptools requirement
  sed -i 's/77.0.3,<=80.4.0/77.0.3/g' pyproject.toml
}

build() {
  cd "$_name-$pkgver"
  python setup.py build_ext --inplace
  python -m build --wheel --no-isolation
}

check() {
  cd "$_name-$pkgver"

  # Create a temporary bin directory with the cxfreeze wrapper
  mkdir -p test-bin
  cat >test-bin/cxfreeze <<EOF
#!/usr/bin/env python
from cx_Freeze.cli import main
main()
EOF
  chmod +x test-bin/cxfreeze

  # Run tests with the wrapper script available in PATH
  PATH="$PWD/test-bin:$PATH" \
    PYTHONPATH="$PWD" \
    pytest -rpfEsXx \
    --ignore=tests/test_command_bdist_deb.py \
    --ignore=tests/test_command_bdist_rpm.py
}

package() {
  cd "$_name-$pkgver"
  python -m installer --destdir="$pkgdir" dist/*.whl

  # Remove installed tests
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  rm -rf "${pkgdir}${site_packages}/tests/"
}
