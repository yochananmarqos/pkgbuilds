# https://aur.archlinux.org/packages/python-cx-freeze

pkgname=python-cx-freeze
_name=cx_Freeze
pkgver=8.3.0
pkgrel=1
pkgdesc="Create standalone executables from Python scripts"
arch=('x86_64' 'aarch64')
url="https://marcelotduarte.github.io/cx_Freeze"
license=('PSF-2.0')
depends=(
  'glibc'
  'patchelf'
  'python'
  'python-packaging'
  'python-setuptools'
  'python-filelock'
)
makedepends=(
  'python-build'
  'python-installer'
  'python-wheel'
)
checkdepends=(
  'python-pytest'
  'python-pytest-datafiles'
  'python-pytest-mock'
  'python-pytest-timeout'
)
optdepends=(
  'perl-alien-build: Alien support for rpm, dpkg, stampede slp, and slackware tgz file formats'
  'pyside2'
  'pyside6'
  'python-pyqt5'
  'python-pyqt6'
  'rpm-tools: RPM Package Manager RPM.org support'
)
provides=('python-cx_freeze')
conflicts=('python-cx_freeze')
source=("$_name-$pkgver.tar.gz::https://github.com/marcelotduarte/cx_Freeze/archive/refs/tags/$pkgver.tar.gz")
sha512sums=('920f1bf582c73ef687956d0e58293e11e67a5c002816416ac4edf1e033d11131463625f90498f91bf41201a24fcae53c31604fc6b4aaf70eb2c16449f9896d36')

prepare() {
  cd "$_name-$pkgver"

  # Relax Setuptools requirement
  sed -i 's/77.0.3,<=80.4.0/77.0.3/g' pyproject.toml
}

build() {
  cd "$_name-$pkgver"
  export PYTHONNOUSERSITE=1 # Similar to Py_NoSiteFlag
  export PYTHONFROZEN=1     # Similar to Py_FrozenFlag
  export PYTHONPATH=""      # Control Python path
  _pyinclude=$(python -c "import os, sys; print(os.path.dirname(os.__file__))")
  export CFLAGS="${CFLAGS} -Wno-implicit-function-declaration -Wno-int-conversion -I${_pyinclude}"
  export CPPFLAGS="${CPPFLAGS} -I${_pyinclude}"
  python -m build --wheel --no-isolation
}

check() {
  cd "$_name-$pkgver"
  echo "Removing the following directory for a clean install: ${PWD}/test_dir"
  rm -rf test_dir

  python -m installer --destdir=test_dir dist/*.whl

  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  export PYTHONPATH="${PWD}/test_dir/${site_packages}:${PYTHONPATH}"

  # Workaround for 'FATAL ERROR:SOURCE_DATE_EPOCH'
  # https://github.com/AppImage/AppImageKit/issues/1202
  unset SOURCE_DATE_EPOCH

  # Since deb and rpm are optional, disable testing
  #pytest -vv -k 'not pandas and not deb and not rpm'

  pytest -k "not (test___main__ or test_cxfreeze or \
    test_cxfreeze_target_name_not_isidentifier or test_cxfreeze_deprecated_behavior or \
    test_cxfreeze_deprecated_option or test_cxfreeze_include_path or test_build or \
    test_build_exe or test_zip or test_excludes or test_install or test_install_pyproject or \
    test_executables or test_valid_icon or test_executable_rename or test_executable_namespace or \
    test_multiprocess or test_multiprocessing or test_ssl or test_tkinter or test_tz or \
    test_command_bdist or test_freezer or test_hooks_pandas)"
}

package() {
  cd "$_name-$pkgver"
  python -m installer --destdir="$pkgdir" dist/*.whl

  # Remove installed tests
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  rm -rf "${pkgdir}${site_packages}/tests/"
}
