# https://aur.archlinux.org/packages/passy

pkgname=passy
_app_id=com.glitterware.passy
pkgver=1.9.1
pkgrel=1
pkgdesc="Offline password manager with cross-platform synchronization"
arch=('x86_64' 'aarch64')
url="https://glitterware.github.io/Passy"
license=('GPL-3.0-or-later')
depends=(
  'gtk3'
  'libayatana-appindicator'
  'mpv'
)
makedepends=(
  'chrpath'
  'clang'
  'cmake'
  'git'
  'ninja'
  'unzip'
)
source=("git+https://github.com/GlitterWare/Passy.git#tag=v$pkgver"
        'git+https://github.com/flutter/flutter.git'
        'git+https://github.com/P-H-C/phc-winner-argon2.git')
sha256sums=('e6a5b8a3408ea4b1567367f259776dd7bf1c99e1fadaebdb231407377a5a8a29'
            'SKIP'
            'SKIP')

prepare() {
  cd Passy
  git submodule init
  git config submodule.submodules/flutter.url "$srcdir/flutter"
  git config submodule.submodules/phc-winner-argon2.url "$srcdir/phc-winner-argon2"
  git -c protocol.file.allow=always submodule update

  export FLUTTER_HOME="${PWD}/submodules/flutter"
  export PATH="${FLUTTER_HOME}/bin:${PATH}"

  # Disable analytics
  flutter --disable-analytics

  # Ensure no build artifacts are cached
  flutter clean

  # Download dependencies
  flutter pub get
}

build() {
  cd Passy
  export FLUTTER_HOME="${PWD}/submodules/flutter"
  export PATH="${FLUTTER_HOME}/bin:${PATH}"
  flutter --disable-analytics
  flutter build linux --dart-define=UPDATES_POPUP_ENABLED=false
}

package() {
  cd Passy

  if [ "$CARCH" == "aarch64" ]; then
    FLUTTER_ARCH=arm64
  else
    FLUTTER_ARCH=x64
  fi

  install -Dm755 "build/linux/${FLUTTER_ARCH}/release/bundle/$pkgname" -t \
    "$pkgdir/opt/$pkgname/"
  install -m755 "build/linux/${FLUTTER_ARCH}/release/bundle/${pkgname}"{_cli,_cli_native_messaging.sh} -t \
    "$pkgdir/opt/$pkgname/"
  install -m644 "build/linux/${FLUTTER_ARCH}/release/bundle/${pkgname}_cli_native_messaging.json" -t \
    "$pkgdir/opt/$pkgname/"
  cp -r "build/linux/${FLUTTER_ARCH}/release/bundle"/{data,lib} "$pkgdir/opt/$pkgname"

  install -d "$pkgdir/usr/bin"
  ln -s "/opt/$pkgname/$pkgname" "$pkgdir/usr/bin/"

  install -Dm644 logo.svg "$pkgdir/usr/share/icons/hicolor/scalable/apps/${_app_id}.svg"
  install -Dm644 "linux_assets/${_app_id}.desktop" -t "$pkgdir/usr/share/applications/"
  install -Dm644 "linux_assets/${_app_id}.appdata.xml" -t "$pkgdir/usr/share/metainfo/"

  # Remove insecure RUNPATH pointing to build dir
  chrpath --delete "$pkgdir/opt/$pkgname"/lib/*.so
}
