## WIP

# https://aur.archlinux.org/pkgbase/openscq30

pkgname=('openscq30-cli' 'openscq30-gui')
pkgbase=openscq30
_app_id=com.oppzippy.OpenSCQ30
_pkgver=2.0.0-beta4
pkgver=${_pkgver//-/.}
pkgrel=1
pkgdesc="Cross platform application for controlling settings of Soundcore headphones"
arch=('x86_64')
url="https://github.com/Oppzippy/OpenSCQ30"
license=('GPL-3.0-or-later')
makedepends=(
  'cargo'
  'just'
)
depends=(
  'cosmic-icon-theme'
  'dbus'
  'gcc-libs'
  'gtk4'
  'libadwaita'
  'libxkbcommon'
  'sqlite'
  'xdg-utils'
)
checkdepends=('xorg-server-xvfb')
source=("OpenSCQ30-${_pkgver}.tar.gz::$url/archive/refs/tags/v${_pkgver}.tar.gz"
        'script.patch')
sha256sums=('936698b00623cea6bb82e367eeb0bd59df6449cdbf9c1a1a64fab068d7d0cf7d'
            '7d523fb6e534ebfe6599cd03d4b57940cbe32cb1ab27df7e68972651a8290fdf')

prepare() {
	cd "OpenSCQ30-${_pkgver}"
	export RUSTUP_TOOLCHAIN=stable
	cargo fetch --target "$(rustc -vV | sed -n 's/host: //p')"

  # Fix install script directories
  # Don't build during install
  patch -Np1 -i ../script.patch
}

build() {
	cd "OpenSCQ30-${_pkgver}"
	export RUSTUP_TOOLCHAIN=stable
	export CARGO_TARGET_DIR=target
  just cli/ build release
  just gui/ build release
}

check() {
	cd "OpenSCQ30-${_pkgver}"
	export RUSTUP_TOOLCHAIN=stable
#  just lib/ test || :
#  just cli/ test || :
#  xvfb-run --auto-servernum just gui/ test || :
}

package_openscq30-cli() {
	pkgdesc+=" - CLI application"
	depends=(
	  'dbus'
	  'gcc-libs'
	)

	cd "OpenSCQ30-${_pkgver}"
  just cli/ install "$pkgdir/usr"
}

package_openscq30-gui() {
	pkgdesc+=" - GUI application"

	cd "OpenSCQ30-${_pkgver}"
#	just gui/ install "$pkgdir/usr"

  install -Dm755 "gui/target/release/$pkgbase-gui" -t "$pkgdir/usr/bin/"
  install -Dm644 "gui/resources/${_app_id}.desktop" -t "$pkgdir/usr/share/applications"
  install -Dm644 "gui/resources/${_app_id}.metainfo.xml" -t "$pkgdir/usr/share/metainfo"
  install -Dm644 "gui/resources/${_app_id}.svg" -t "$pkgdir/usr/share/icons/hicolor/scalable/apps"
}
