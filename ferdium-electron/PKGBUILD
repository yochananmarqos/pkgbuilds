# https://aur.archlinux.org/packages/ferdium-electron
groups=('modified')

pkgname=ferdium-electron
pkgver=6.7.7
pkgrel=1
_electronversion=32
pkgdesc='A messaging browser that allows you to combine your favorite messaging services into one application'
arch=('x86_64')
url="https://ferdium.org"
license=('Apache-2.0 AND MIT')
depends=("electron${_electronversion}")
makedepends=('asar' 'git' 'jq' 'pnpm')
provides=('ferdium')
conflicts=('ferdium')
source=("git+https://github.com/ferdium/ferdium-app#tag=v$pkgver"
        'git+https://github.com/ferdium/ferdium-recipes.git'
        'ferdium.desktop')
sha256sums=('f150bc0de89c34c586563c0e1e7ee27505b0b3defaa374ff3d94b481ec88e504'
            'SKIP'
            'd6e129220ed947cb5fa205211dabc6311a3d9c92434b6bc8deb2fae802c0b0d0')

prepare() {
  cd ferdium-app
  git submodule init
  git config submodule.recipes.url "$srcdir/ferdium-recipes"
  git -c protocol.file.allow=always submodule update

  local node_ver=$(node -v | sed -e 's/^v//')
  local electronVer="$(cat "/usr/lib/electron${_electron}/version")"

  local jq_expr=".engines.node = \"$node_ver\" | .devDependencies.electron = \"$electronVer\""
  jq "${jq_expr}" package.json > package.tmp.json
  mv package.tmp.json package.json

  jq "${jq_expr}" recipes/package.json > package.tmp.json
  mv package.tmp.json recipes/package.json

  # Specify path for autostart file
  sed -i -e "s#path: executablePath,#path: '/usr/bin/ferdium',#g" src/stores/AppStore.ts

  # Set noUnusedLocals to false to avoid compilation error in AppStore.ts
  sed -i -e 's#"noUnusedLocals": true#"noUnusedLocals": false#g' tsconfig.json

  mkdir -p "$srcdir/.buildtools"
}

build() {
  cd ferdium-app
  electronDist="/usr/lib/electron${_electronversion}"
  electronVer="$(sed s/^v// /usr/lib/electron${_electronversion}/version)"
  export PNPM_HOME="$srcdir/pnpm-home"
  export CI=true
  export PATH="$srcdir/.buildtools:$PATH"
  corepack enable --install-directory "$srcdir/.buildtools"
  pnpm install --no-frozen-lockfile --ignore-script

  pushd recipes
  pnpm install --no-frozen-lockfile --ignore-script
  pnpm package
  popd

  NODE_ENV=production pnpm build --linux --x64 --dir \
     $dist -c.electronDist=$electronDist -c.electronVersion=$electronVer
}

package() {
  cd ferdium-app
  install -d "$pkgdir/usr/bin"
  cat > "$pkgdir/usr/bin/ferdium" <<EOF
#!/bin/sh
ELECTRON_IS_DEV=0 exec /usr/bin/electron${_electronversion} /usr/lib/ferdium "\$@"
EOF
  chmod +x "$pkgdir/usr/bin/ferdium"

  install -d "$pkgdir/usr/lib/ferdium"
  asar e out/linux-unpacked/resources/app.asar "$pkgdir/usr/lib/ferdium"

  install -Dm0644 -t "$pkgdir/usr/share/applications/" "$srcdir/ferdium.desktop"
  for _size in 16 24 32 48 64 96 128 256 512 1024; do
    install -Dm644 "build-helpers/images/icons/${_size}x${_size}.png" \
      "$pkgdir/usr/share/icons/hicolor/${_size}x${_size}/apps/ferdium.png"
  done

  install -Dm0644 recipes/LICENSE.md -t "$pkgdir/usr/share/licenses/$pkgname/"
}
